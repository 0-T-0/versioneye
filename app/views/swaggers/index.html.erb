<% title  "#{@version} API documentation" %>

<div id='header' >
  <div class="swagger-ui-wrap" style="float: none;">
    <form id='api_selector'>
      <div class='input'><input placeholder="/api/v1/swagger_doc.json" id="input_baseUrl" name="baseUrl" type="text"/></div>
      <div class='input'><input placeholder="api_key" id="input_apiKey" name="apiKey" type="text"/></div>
      <div class='input'><a id="explore" class="btn2" href="#">Explore</a></div>
    </form>
  </div>
</div>
<br/>

<div class="heading">
  <br/>
  <p>
    An API is an "Application Programming Interface". 
    You can use the API to write mobile Apps for VersionEye. 
    The iPhone and Android App we are working on is using the same API. 
    But you can also use it to write an Desktop Application, Gadget or Widget.
  </p>
  <p>
    This is still a beta version, and we are very looking forward to your feedback and
    ideas to make our API even more powerful and developer friendly.
  </p>
</div>

<div id="message-bar" class="swagger-ui-wrap">
    &nbsp;
</div>

<div id="swagger-ui-container" class="swagger-ui-wrap">

</div>

<script type="text/javascript">
    jQuery(function () {
        window.swaggerUi = new SwaggerUi({
          discoveryUrl: "<%= @api_url %>/swagger_doc.json",
            apiKey:"<%= @api_key %>",
            dom_id:"swagger-ui-container",
            supportHeaderParams: false,
            debug: false,
            supportedSubmitMethods: ['get', 'post', 'put', 'delete'],
            docExpansion: "list",
            onComplete: function(swaggerApi, swaggerUi){
              if(console) {
                    console.log("Loaded SwaggerUI")
              }
              $('pre code').each(function(i, e) {hljs.highlightBlock(e)});
            },
            onFailure: function(data) {
                if(console) {
                    console.log("Unable to Load SwaggerUI");
                    console.log(data);
                }
            }
        });

        window.swaggerUi.load();
    });
    $ == jQuery;
</script>
