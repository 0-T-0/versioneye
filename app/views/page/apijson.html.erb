
<% title "JSON API" %>

<div class="span3 sidebar" >
	<%= render 'page/apijson_navi' %>
</div>

<div class="span8">
	<p  >
		This document describes the JSON API for VersionEye. 
	</p>
	<p  >
		An API is an "Application Programming Interface". 
		You can use the API to write mobile Apps for VersionEye. 
		The iPhone App and Android App we are working on is using 
		the same API. But you can also use it to write an Desktop 
		Application, Gadget or Widget. 
	</p>	
	

	<h5 class="docu_h5">Search</h5><a name="search"></a>
	<p  >
		This is how you can use the search in your application. 
	</p>
	<pre class="code">https://www.versioneye.com/search.json?q=<<span>SEARCH TERM</span>></pre>
	<p  >
		Here is an example. 
	</p>
	<pre class="code">https://www.versioneye.com/search.json?q=junit</pre>
	<p  >
		The result is the same as in the web application. But you get it as JSON objects. The result is an array of product objects.
	</p>
	<p  >
		The search term must contain at least 2 characters. Otherwise you get null back. 
		If there are no results you get an empty array [ ] back. Here are the possible parameters: 
	</p>
	<p  >
		<table style="width:570px;" class="table table-hover docu_table">
			<colgroup>
				<col width="150px;" />
				<col width="420px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align:left">ATTRIBUTE</th>
					<th style="text-align:left">DESCRIPTION</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>q</td>
					<td>The search query. This stands for the name of a package.</td>
				</tr>
				<tr>
					<td>d</td>
					<td>Description of the package</td>
				</tr>
				<tr>
					<td>g</td>
					<td>GroupId. This is Maven specific</td>
				</tr>
				<tr>
					<td>lang</td>
					<td>Language of the package</td>
				</tr>
			</tbody>
		</table>
	</p>
	<p>
		Here is the description for the json result object. 
	</p>
	<p  >
		<table style="width:570px;" class=" table table-hover docu_table">
			<colgroup>
				<col width="150px;" />
				<col width="420px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align:left">ATTRIBUTE</th>
					<th style="text-align:left">DESCRIPTION</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>name</td>
					<td>Name of the product.</td>
				</tr>
				<tr>
					<td>prod_key</td>
					<td>Unique key of the product.</td>
				</tr>
				<tr>
					<td>group_id</td>
					<td>GroupID of the product. This is important for Maven2 products.</td>
				</tr>
				<tr>
					<td>artifact_id</td>
					<td>ArtifactID of the product. This is important for Maven2 products.</td>
				</tr>
				<tr>
					<td>version</td>
					<td>Newest version of the product</td>
				</tr>
				<tr>
					<td>language</td>
					<td>Programming language</td>
				</tr>
			</tbody>
		</table>
	</p>

	<h5 class="docu_h5">Package Details</h5><a name="productdetails"></a>
	<p  >
		If you want to have details to a special product/version you can use this request here.
	</p>
	<pre class="code">https://www.versioneye.com/product/<<span>PROD_KEY</span>>/version/<<span>VERSION_ID</span>>.json</pre>
	<p  >
		Here is an example for JUnit.
	</p>
	<pre class="code">https://www.versioneye.com/product/junit--junit/version/4~10.json</pre>
	<p  >
		If there are some special characters in "PROD_KEY" or "VERSION_ID" you must 
		replace it to make it URL ready! Here is the table with the replacements.
	</p>
	<p  >
		<table style="width:400px;" class="table table-hover docu_table">
			<colgroup>
				<col width="250px;" />
				<col width="320px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: left">PROD_KEY VALUE</th>
					<th style="text-align: left">URL VALUE</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td style="width: 150px;">/</td>
					<td>--</td>
				</tr>
				<tr>
					<td>.</td>
					<td>~</td>
				</tr>
			</tbody>
		</table>
	</p>	
	<p>
		Here is the description of the JSON object for a package detail page. 
	</p>
	<p  >
		<table style="width:570px;" class=" table table-hover docu_table">
			<colgroup>
				<col width="150px;" />
				<col width="420px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: left">ATTRIBUTE</th>
					<th style="text-align: left">DESCRIPTION</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>name</td>
					<td>Name of the product.</td>
				</tr>
				<tr>
					<td>prod_key</td>
					<td>Unique key of the product.</td>
				</tr>
				<tr>
					<td>group_id</td>
					<td>GroupID of the product. This is important for Maven2 products.</td>
				</tr>
				<tr>
					<td>artifact_id</td>
					<td>ArtifactID of the product. This is important for Maven2 products.</td>
				</tr>
				<tr>
					<td>version</td>
					<td>Newest version of the product</td>
				</tr>
				<tr>
					<td>language</td>
					<td>Programming language</td>
				</tr>
				<tr>
					<td>prod_type</td>
					<td>Type of the package. Repository name.</td>
				</tr>
				<tr>
					<td>description</td>
					<td>Description of the package.</td>
				</tr>
				<tr>
					<td>link</td>
					<td>Link to the Homepage.</td>
				</tr>
				<tr>
					<td>license</td>
					<td>License information.</td>
				</tr>
			</tbody>
		</table>
	</p>


	<h5 class="docu_h5">User Profile</h5><a name="userprofile"></a>
	<p  >
		If you want to have details to a special profile you can use this request here.
	</p>
	<pre class="code">https://www.versioneye.com/users/<<span>USERNAME</span>>.json</pre>
	<p  >
		Here is an example with the profile of Robert Reiz.
	</p>
	<pre class="code">https://www.versioneye.com/users/reiz.json</pre>
	<p  >
		The result contains username und fullname.
	</p>
	<p  >
		<table style="width:570px;" class="table table-hover docu_table">
			<colgroup>
				<col width="150px;" />
				<col width="420px;" />
			</colgroup>
			<thead>
			<tr>
				<th style="text-align: left">ATTRIBUTE</th>
				<th style="text-align: left">DESCRIPTION</th>
			</tr>
			</thead>
			<tbody>
				<tr>
					<td style="width: 150px;">fullname</td>
					<td>Fullname of the user</td>
				</tr>
				<tr>
					<td style="width: 150px;">username</td>
					<td>Username of the user</td>
				</tr>
			</tbody>
		</table>
	</p>
	
	<h5 class="docu_h5">User Favorite Packages</h5><a name="userfavproducts"></a>
	<p  >
		If you want to have the favorite products to a special user profile you can use this request here.
	</p>
	<pre class="code">https://www.versioneye.com/users/<<span>USERNAME</span>>/favoritepackages.json</pre>
	<p  >
		Here is an example with the profile of Robert Reiz.
	</p>
	<pre class="code">https://www.versioneye.com/users/reiz/favoritepackages.json</pre>
	<p  >
		Every user can control the result for this request in the privacy settings. 
		If a user decided that nobody can see his favorite products, this request 
		will just return an empty array! 
	</p>
	<p  >
		Otherwise the result contains all favorite products of the given user. 
		The products are sorted by the date in a descending order. 
		That means the newest product is on the top, the oldest is on the bottom. 
	</p>
	<p  >
		Check out the table for the product object in the top of the page. 
	</p>
	
	
	<h5 class="docu_h5">User Comments</h5><a name="usercomments"></a>
	<p  >
		If you want to have all user comments to a special user profile you can use this request here.
	</p>
	<pre class="code">https://www.versioneye.com/users/<<span>USERNAME</span>>/comments.json</pre>
	<p  >
		Here is an example with the profile of Robert Reiz.
	</p>
	<pre class="code">https://www.versioneye.com/users/reiz/comments.json</pre>
	<p  >
		Every user can control the result for this request in the privacy settings. 
		If a user decided that nobody can see his comments on his profile, this request 
		will just return an empty array! 
	</p>
	<p  >
		Otherwise the result contains all comments of the given user. 
	</p>
	<p>
		Here is the description for the json comment object. 
	</p>
	<p  >
		<table style="width:570px;" class="table table-hover docu_table">
			<colgroup>
				<col width="150px;" />
				<col width="420px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: left">ATTRIBUTE</th>
					<th style="text-align: left">DESCRIPTION</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td style="width: 150px;">comment</td>
					<td>An user comment.</td>
				</tr>
				<tr>
					<td style="width: 150px;">from</td>
					<td>Name of the User</td>
				</tr>
				<tr>
					<td style="width: 150px;">prod_name</td>
					<td>Name of the Product</td>
				</tr>
				<tr>
					<td style="width: 150px;">prod_key</td>
					<td>Key of the Product</td>
				</tr>
				<tr>
					<td>created_at</td>
					<td>Creation Date</td>
				</tr>
			</tbody>
		</table>
	</p>


	<h5 class="docu_h5">User Notifications</h5><a name="usernotifications"></a>
	<p  >
		This request makes just sense if you are logged in / signed in! 
	</p>
	<pre class="code">https://www.versioneye.com/users/<<span>USERNAME</span>>/notifications.json</pre>
	<p  >
		It returns the number of the unread notifications. 
	</p>
	
	
	<h5 class="docu_h5">Sign In</h5><a name="signin"></a>
	<p  >
		If you want to write an application where the user can sign in into VersionEye, 
		you can do it with a simple post request. Just send a post request to this address.
	</p>
	<pre class="code">https://www.versioneye.com/sessions.json</pre>
	<p  >
		This table below shows what your post form must contain.
	</p>
	<p  >
		<table style="width:570px;" class="table table-hover docu_table">
			<colgroup>
				<col width="250px;" />
				<col width="320px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: left">NAME</th>
					<th style="text-align: left">EXAMPLE VALUE</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td style="width: 150px;">session[email]</td>
					<td>your.email@gmail.com</td>
				</tr>
				<tr>
					<td>session[password]</td>
					<td>yourpassword</td>
				</tr>
			</tbody>
		</table>
	</p>
	<p  >
		If the sign in procedure is not successful you will get back an empty string. 
	</p>
	<p  >
		If the sign in procedure is successful you will get back the user as JSON object. 
		That contains the username and the full name of the user.  
	</p>
	<p  >
		If the sign in procedure is successful the server will set a cookie on your system. 
		This is for storing the session. It is absolute important that your system is 
		supporting cookies!
	</p>
	
	
	<h5 class="docu_h5">Sign Out</h5><a name="signout"></a>
	<p  >
		If you want to sign out, just send a request to this URL
	</p>
	<pre class="code">https://www.versioneye.com/signout.json</pre>
	<p  >
		After the request the server will destroy the cookie and the corresponding session. 
	</p>
	
	
	<h5 class="docu_h5">Follow</h5><a name="follow"></a>
	<p  >
		The follow feature is just working when the user is signed in! In that case you 
		just have to send a post request to this URL.
	</p>
	<pre class="code">https://www.versioneye.com/package/follow.json</pre>
	<p  >
		This table below shows what your post form must contain. 
	</p>
	<p  >
		<table style="width:570px;" class="table table-hover docu_table">
			<colgroup>
				<col width="250px;" />
				<col width="320px;" />
			</colgroup>
			<thead>
				<tr>
					<th style="text-align: left">NAME</th>
					<th style="text-align: left">EXAMPLE VALUE</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td style="width: 150px;">product_key</td>
					<td>pl~pragmatists--JUnitParams</td>
				</tr>
			</tbody>
		</table>
	</p>
	<p  >
		If something went wrong you will get back nil or an empty string. If everything 
		worked out perfectly you will get back the string "success". 
	</p>

	<h5 class="docu_h5">Unfollow</h5><a name="unfollow"></a>
	<p >
		The unfollow feature is working in the same fashion like the follow feature. 
		But you have to use this URL.
	</p>
	<pre class="code">https://www.versioneye.com/package/unfollow.json</pre>
</div>